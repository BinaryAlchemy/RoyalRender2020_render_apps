echo * maya.rrEnv version %rrVersion%


# !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!
#
# Please to create/edit the ...__inhouse.rrEnv file instead
# If this is not possible, PLEASE CONTACT support@RoyalRender.de 
# We will send you an update rrEnv file that will work 
#
# "but I know what I am doing"....  Still " NO! NO! NO!"
# It is not about you knowing that it will work, it is about RR updates/bug fixes might not work because of you.
# And if you need a bug fix for an urgent render, we cannot help you any more.
# And if you want to update RR to e.g. support a new render app version, your whole farm could break.
#
# !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!



# disable Autodesk Customer Involvement Program (CIP). Shutdown time of Maya fastened by  up to 30s if no internet connection available. And no crashes if home/.autdesk is read-only
MAYA_DEBUG_ENABLE_CRASH_REPORTING  =  0
MAYA_DEBUG_NO_SAVE_ON_CRASH  =  1
MAYA_DISABLE_CIP  =  1
MAYA_DISABLE_CER  =  1
MAYA_DISABLE_CLIC_IPM  =  1

MAYA_APP_DIR  =  <rrLocalPrefs>
[If] <RR_MAYA_PREFS>  [==] 
    RR_MAYA_PREFS  =  <rrPrefs><rrExeVersionMinReq>
[EndIf]
echo * Maya preference source path is set to <RR_MAYA_PREFS>
echo * Maya preference cache  path is set to <rrLocalPrefs><rrExeVersionMinReq>
[copy] OverwriteDifferentDir <RR_MAYA_PREFS>   =>   <rrLocalPrefs><rrExeVersionMinReq>


LD_LIBRARY_PATH  =  <rrBaseAppPath>\lib;<LD_LIBRARY_PATH>

RR_MAYAPLUGIN_BASE  =  <rrPlugins><rrExeVersionMinReq>\plug-ins
RR_MAYAPLUGIN_BASE_LOCAL  =  <rrLocalExeDir><rrExeVersionMinReq>\plug-ins
echo * Maya plugin source path is set to <RR_MAYAPLUGIN_BASE>
echo * Maya plugin path is set to <RR_MAYAPLUGIN_BASE_LOCAL>
[copy] SyncNoCreateDir <RR_MAYAPLUGIN_BASE>   =>   <RR_MAYAPLUGIN_BASE_LOCAL>
PATH  =  <RR_MAYAPLUGIN_BASE_LOCAL>;<PATH>
MAYA_PLUG_IN_PATH  =  <RR_MAYAPLUGIN_BASE_LOCAL>;<MAYA_PLUG_IN_PATH>
MAYA_SCRIPT_PATH  =  <rrPlugins><rrExeVersionMinReq>\scripts;<MAYA_SCRIPT_PATH>
MAYA_MODULE_PATH  =  <rrPlugins><rrExeVersionMinReq>\modules;<MAYA_MODULE_PATH>
MI_CUSTOM_SHADER_PATH  =  <rrPlugins><rrExeVersionMinReq>\mentalray\include;<rrPlugins><rrExeVersionMinReq>\mentalray\lib;<MI_CUSTOM_SHADER_PATH>
MAYA_RENDER_DESC_PATH  =  <rrPlugins><rrExeVersionMinReq>\rendererDesc;<MAYA_RENDER_DESC_PATH>
PYTHONPATH  = <PYTHONPATH>


# ###################  RenderManStudio environment variables ###################
[If] <rrJobRenderer>  [==] renderMan
    RR_RenderManForMaya_BASE  =  <rrSharedExeDir>RenderManForMaya-<rrJobRendererVersion>-maya<rrExeVersionMinReq>
    RR_RenderManForMaya_LOCAL  =  <rrLocalExeDir>RenderManForMaya-<rrJobRendererVersion>-maya<rrExeVersionMinReq>
    RR_RenderManProServer_BASE  =  <rrSharedExeDir>RenderManProServer-<rrJobRendererVersion>
    RR_RenderManProServer_LOCAL  =  <rrLocalExeDir>RenderManProServer-<rrJobRendererVersion>
[EndIf]

[If] <rrJobRenderer>  [==] renderMan
    echo * RenderManForMaya source path is set to <RR_RenderManForMaya_BASE>
    echo * RenderManForMaya cache path is set to <RR_RenderManForMaya_LOCAL>
    [copy] SyncCreateDir <RR_RenderManForMaya_BASE>   =>   <RR_RenderManForMaya_LOCAL>
    echo * RenderManProServer source path is set to <RR_RenderManProServer_BASE>
    echo * RenderManProServer cache path is set to <RR_RenderManProServer_LOCAL>
    [copy] SyncCreateDir <RR_RenderManProServer_BASE>   =>   <RR_RenderManProServer_LOCAL>
    [copy] SyncCreate <rrSharedExeDir>pixar.license   =>   <rrLocalExeDir>pixar.license
    MAYA_SCRIPT_PATH  =  <RR_RenderManForMaya_LOCAL>\scripts;<MAYA_SCRIPT_PATH>
    #PYTHONPATH  =  <RR_RenderManForMaya_LOCAL>\scripts;<PYTHONPATH>
    MAYA_PLUG_IN_PATH  =  <RR_RenderManForMaya_LOCAL>\plug-ins;<MAYA_PLUG_IN_PATH>
    MAYA_RENDER_DESC_PATH  =  <RR_RenderManForMaya_LOCAL>\etc;<MAYA_RENDER_DESC_PATH>
    #MAYA_MODULE_PATH  =  <RR_RenderManForMaya_LOCAL>\etc;<MAYA_MODULE_PATH>
    RATTREE  =  <RR_RenderManForMaya_LOCAL>
    RMANTREE  =  <RR_RenderManProServer_LOCAL>
    RMSTREE  =  <RR_RenderManProServer_LOCAL>
    # XBMLANGPATH  =  <RR_RenderManProServer_LOCAL>\lib\mtor\resources
    PATH  =  <RR_RenderManProServer_LOCAL>\lib;<PATH>
[EndIf]


# ###################  MAYAMANROOT environment variables ###################
# MAYAMANROOT  =  C:\Program Files\mayaman<rrJobRendererVersion>
# MAYA_SCRIPT_PATH  =  <MAYAMANROOT>\mel\;<MAYA_SCRIPT_PATH>
# MAYA_PLUG_IN_PATH  =  <MAYAMANROOT>\plugins\<rrExeVersionMinReq>;<MAYA_PLUG_IN_PATH>


# ###################  3Delight environment variables ###################
# DELIGHT  =  C:\Program Files\3Delight
# DL_DISPLAYS_PATH  =  <DELIGHT>\displays
# DL_SHADERS_PATH  =  <DELIGHT>\shaders
# PATH  =  <PATH>;<DELIGHT>\bin
# MAYA_PLUG_IN_PATH  =  <MAYA_PLUG_IN_PATH>;<DELIGHT>\maya\plugins
# MAYA_RENDER_DESC_PATH  =  <MAYA_RENDER_DESC_PATH>;<DELIGHT>\maya\render_desc
# MAYA_SCRIPT_PATH  =  <MAYA_SCRIPT_PATH>;<DELIGHT>\maya\scripts


# ###################  VRay environment variables ###################
[If] <rrJobRenderer>  [contains] vray
    #just some dummy command 
    echo * Using vray
[Else]
    RR_VRAY_NETWORK  =  0
[EndIf]

#small bug in RR, this is required because of the YETI section. RR thinks the var was already used, but it is not if there is no RR_VRAY_NETWORK
VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS  =  <VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS>

[If] <RR_VRAY_NETWORK>  [==] 1
    [If] <RR_VRAY_BASE>  [==] 
        RR_VRAY_BASE  =  <rrSharedExeDir>vray<rrExeVersionMinReq>
    [EndIf]
    RR_VRAY_BASE_LOCAL  =  <rrLocalExeDir>vray<rrExeVersionMinReq>__<rrJobRendererVersion>
[EndIf]
# On Windows, the whole commandline is loaded and variables are replaced before execution. An If/endif is one commandline. Therefore "set RR_VRAY_BASE_LOCAL  =  " and using it inside the same If/EndIf does not work.
[If] <RR_VRAY_NETWORK>  [==] 1
    echo * VRay source path is set to <RR_VRAY_BASE>
    echo * VRay cache path is set to <RR_VRAY_BASE_LOCAL>
    [copy] SyncCreateDir <RR_VRAY_BASE>   =>   <RR_VRAY_BASE_LOCAL>
    MAYA_PLUG_IN_PATH  =  <RR_VRAY_BASE_LOCAL>\maya_vray\plug-ins;<RR_VRAY_BASE_LOCAL>\maya_root\plug-ins;<MAYA_PLUG_IN_PATH>
    MAYA_SCRIPT_PATH  =  <RR_VRAY_BASE_LOCAL>\maya_vray\scripts;<MAYA_SCRIPT_PATH>
    MAYA_RENDER_DESC_PATH  =  <RR_VRAY_BASE_LOCAL>\maya_root\bin\rendererDesc;<MAYA_RENDER_DESC_PATH>
    MAYA_MODULE_PATH  =  <RR_VRAY_BASE_LOCAL>\maya_root\modules;<MAYA_MODULE_PATH>
    VRAY_FOR_MAYA<ExeVersionMinReqUS>_MAIN  =  <RR_VRAY_BASE_LOCAL>\maya_vray
    VRAY_FOR_MAYA<ExeVersionMinReqUS>_MAIN_x64  =  <RR_VRAY_BASE_LOCAL>\maya_vray
    VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS  =  <RR_VRAY_BASE_LOCAL>\maya_vray\vrayplugins
    VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS_x64  =  <RR_VRAY_BASE_LOCAL>\maya_vray\vrayplugins
    VRAY_PLUGINS_x64  =  <RR_VRAY_BASE_LOCAL>\maya_vray\vrayplugins
    VRAY_OSL_PATH_MAYA<ExeVersionMinReqUS>_x64  =  <RR_VRAY_BASE_LOCAL>\vray\opensl
    VRAY_TOOLS_MAYA<ExeVersionMinReqUS>_x64  =  <RR_VRAY_BASE_LOCAL>\vray\bin
    PATH  =  <RR_VRAY_BASE_LOCAL>\maya_root\bin;<RR_VRAY_BASE_LOCAL>\vray\bin;<PATH>
    LD_LIBRARY_PATH  =  <RR_VRAY_BASE_LOCAL>\maya_root\bin;<RR_VRAY_BASE_LOCAL>\vray\bin;<RR_VRAY_BASE_LOCAL>\maya_root\lib;<MAYA_APP_DIR>\lib;<LD_LIBRARY_PATH>
    echo + VRayForMaya any <RR_VRAY_BASE_LOCAL>/maya_vray > <RR_VRAY_BASE_LOCAL>/maya_root/modules/VRayForMaya.module
[EndIf]

[If] <RR_VRAY_NETWORK>  [==] 1
#     ###################  Phoenix inside Vray folder  environment variables ###################
    PHX_FOR_MAYA<ExeVersionMinReqUS>_MAIN_x64  =  <RR_VRAY_BASE>\plug-ins
    MAYA_PLUG_IN_PATH  =  <RR_VRAY_BASE_LOCAL>\phoenixfd\plug-ins\;<MAYA_PLUG_IN_PATH>;
    MAYA_SCRIPT_PATH  =  <RR_VRAY_BASE_LOCAL>\phoenixfd\scripts\;<MAYA_SCRIPT_PATH>;
[EndIf]

VRAY_VFB_GUI  =  0


# ###################  Arnold/MtoA environment variables ###################
[If] <RR_MTOA_NETWORK>  [==] 
    RR_MTOA_NETWORK  =  1
[EndIf]



[If] <rrJobRenderer>  [contains] arnold
    #dummy command 
    RR_MTOA_NETWORK= <RR_MTOA_NETWORK>
[Else]
    [If] <RR_MTOA_BASE>  [==] 
        RR_MTOA_NETWORK  =  0
        [If] <rrExeVersionMajor>  [<] 2020
            [If] <rrExeOS>  [==] win
                RR_MTOA_BASE  =  C:\SolidAngle\mtoadeploy\<rrExeVersionMinReq>
            [Else]
                [If] <rrExeOS>  [==] mac
                    RR_MTOA_BASE  =  /Applications/solidangle/mtoa/<rrExeVersionMinReq>
                [Else]
                    RR_MTOA_BASE  =  /opt/solidangle/mtoa/<rrExeVersionMinReq>
                [EndIf]
            [EndIf]
        [Else]
            [If] <rrExeOS>  [==] win
                RR_MTOA_BASE  =  C:\Program Files\Autodesk\Arnold\maya<rrExeVersionMajor>
            [Else]
                [If] <rrExeOS>  [==] mac
                    RR_MTOA_BASE  =  /Applications/solidangle/mtoa/<rrExeVersionMinReq>
                [Else]
                    RR_MTOA_BASE  =  /opt/solidangle/mtoa/<rrExeVersionMinReq>
                [EndIf]
            [EndIf]
        [EndIf]
    [EndIf]
[EndIf]

[If] <RR_MTOA_BASE>  [==] 
    RR_MTOA_BASE  =  <rrSharedExeDir>mtoadeploy_<rrExeVersionMinReq>
[EndIf]
[If] <RR_MTOA_NETWORK>  [==] 1
    RR_MTOA_BASE_LOCAL  =  <rrLocalExeDir>mtoadeploy_<rrExeVersionMinReq>__<rrJobRendererVersion>
[Else]
    RR_MTOA_BASE_LOCAL  = <RR_MTOA_BASE>
[EndIf]

echo * MtoA source path is set to <RR_MTOA_BASE>
echo * MtoA cache path is set to <RR_MTOA_BASE_LOCAL>
[If] <RR_MTOA_NETWORK>  [==] 1
    [copy] SyncCreateDir <RR_MTOA_BASE>   =>   <RR_MTOA_BASE_LOCAL>
[EndIf]
MAYA_MODULE_PATH  =  <RR_MTOA_BASE_LOCAL>;<MAYA_MODULE_PATH>
MAYA_RENDER_DESC_PATH  =  <RR_MTOA_BASE_LOCAL>;<MAYA_RENDER_DESC_PATH>
MAYA_PLUG_IN_PATH  =  <RR_MTOA_BASE_LOCAL>\plug-ins;<MAYA_PLUG_IN_PATH>
MAYA_SCRIPT_PATH  =  <RR_MTOA_BASE_LOCAL>\scripts\mtoa\mel;<MAYA_SCRIPT_PATH>
# ARNOLD_PROCEDURAL_PATH is an HtoA environment variable. It should not be used by kick.
ARNOLD_PROCEDURAL_PATH  =  <RR_MTOA_BASE_LOCAL>\procedurals;<ARNOLD_PROCEDURAL_PATH>
PATH  =  <RR_MTOA_BASE_LOCAL>\bin;<PATH>
PATH  =  <PATH>;<rrBaseAppPath>\plug-ins\xgen\bin;<rrBaseAppPath>\bin
PATH  =  <ARNOLD_PROCEDURAL_PATH>;<PATH>
LD_LIBRARY_PATH  =  <RR_MTOA_BASE_LOCAL>\bin;<ARNOLD_PROCEDURAL_PATH>;<LD_LIBRARY_PATH>
PYTHONPATH  =  <RR_MTOA_BASE_LOCAL>\scripts;<PYTHONPATH>
ARNOLD_PLUGIN_PATH  =  <RR_MTOA_BASE_LOCAL>\shaders;<ARNOLD_PLUGIN_PATH>
# [copy] SyncCreate <RR_MTOA_BASE_LOCAL>\procedurals\xgen_procedural.dll   =>   <RR_MTOA_BASE_LOCAL>\shaders\xgen_procedural.dll
[If] <RR_MTOA_NETWORK>  [==] 1
    echo + mtoa any <RR_MTOA_BASE_LOCAL> > <RR_MTOA_BASE_LOCAL>/mtoa.mod
[EndIf]

#keeping these files breaks PYTHONPATH in Maya 2018/2019
[If] <rrExeVersionMajor>  [<] 2020
    [DelFile] <RR_MTOA_BASE_LOCAL>/left.bmp
    [DelFile] <RR_MTOA_BASE_LOCAL>/Uninstall.exe
[EndIf]

# ###################  RedShift environment variables ###################

#small bug in RR, this is required because of the YETI section. RR thinks the var was already used, but it is not if redshift is not used
REDSHIFT_MAYAEXTENSIONSPATH = <REDSHIFT_MAYAEXTENSIONSPATH>

[If] <rrJobRenderer>  [contains] redshift
    [If] <RR_REDSHIFT_BASE>  [==] 
        RR_REDSHIFT_BASE  =  <rrSharedExeDir>Redshift_<rrJobRendererVersion>
    [EndIf]
    RR_REDSHIFT_BASE_LOCAL  =  <rrLocalExeDir>Redshift_<rrJobRendererVersion>
[EndIf]
[If] <rrJobRenderer>  [contains] redshift
    echo * RedShift source path is set to <RR_REDSHIFT_BASE>
    echo * RedShift cache path is set to <RR_REDSHIFT_BASE_LOCAL>
    [copy] SyncNoCreateDir <RR_REDSHIFT_BASE>   =>   <RR_REDSHIFT_BASE_LOCAL>
    REDSHIFT_COREDATAPATH  =  <RR_REDSHIFT_BASE_LOCAL>
    [If] <rrExeOS>  [==] win
        REDSHIFT_COMMON_ROOT  =  <RR_REDSHIFT_BASE_LOCAL>\Plugins\Maya\Common
        REDSHIFT_PLUG_IN_PATH  =  <RR_REDSHIFT_BASE_LOCAL>\Plugins\Maya\<rrExeVersionMinReq>\nt-x86-64
    [Else]
        REDSHIFT_COMMON_ROOT  =  <RR_REDSHIFT_BASE_LOCAL>\redshift4maya\common
        REDSHIFT_PLUG_IN_PATH  =  <RR_REDSHIFT_BASE_LOCAL>\redshift4maya\<rrExeVersionMinReq>
    [EndIf]
[EndIf]
[If] <rrJobRenderer>  [contains] redshift    
    REDSHIFT_SCRIPT_PATH  =  <REDSHIFT_COMMON_ROOT>\scripts;<REDSHIFT_COMMON_ROOT>\scripts\override
    REDSHIFT_XBMLANGPATH  =  <REDSHIFT_COMMON_ROOT>\icons
    REDSHIFT_RENDER_DESC_PATH  =  <REDSHIFT_COMMON_ROOT>\rendererDesc
    REDSHIFT_LICENSEPATH  =  <RR_REDSHIFT_BASE_LOCAL>
    REDSHIFT_MAYAEXTENSIONSPATH  =  <REDSHIFT_PLUG_IN_PATH>\extensions;<REDSHIFT_MAYAEXTENSIONSPATH>
[EndIf]   
[If] <rrJobRenderer>  [contains] redshift   
    PYTHONPATH  =  <REDSHIFT_COMMON_ROOT>\scripts;<PYTHONPATH>
    MAYA_RENDER_DESC_PATH  =  <REDSHIFT_RENDER_DESC_PATH>;<MAYA_RENDER_DESC_PATH>
    MAYA_SCRIPT_PATH  =  <REDSHIFT_SCRIPT_PATH>;<MAYA_SCRIPT_PATH>
    MAYA_PLUG_IN_PATH  =  <REDSHIFT_PLUG_IN_PATH>;<MAYA_PLUG_IN_PATH>
    PATH  =  <REDSHIFT_PLUG_IN_PATH>;<REDSHIFT_PLUG_IN_PATH>\extensions;<RR_REDSHIFT_BASE_LOCAL>\bin;<PATH>
    LD_LIBRARY_PATH  =  <REDSHIFT_PLUG_IN_PATH>;<REDSHIFT_PLUG_IN_PATH>\extensions;<RR_REDSHIFT_BASE_LOCAL>\bin;<LD_LIBRARY_PATH>
    [If] <rrExeOS>  [==] win
        [copy] SyncCreate C:\ProgramData\Redshift\redshift-core.lic   =>   <RR_REDSHIFT_BASE_LOCAL>\redshift-core.lic
        [copy] SyncCreate C:\ProgramData\Redshift\redshift-core2.lic   =>   <RR_REDSHIFT_BASE_LOCAL>\redshift-core2.lic
    [Else]
        [If] <rrExeOS>  [==] lx
            [copy] SyncCreate /home/${USERNAME}/redshift/redshift-core.lic   =>   <RR_REDSHIFT_BASE_LOCAL>/redshift-core.lic
            [copy] SyncCreate /home/${USERNAME}/redshift/redshift-core2.lic   =>   <RR_REDSHIFT_BASE_LOCAL>/redshift-core2.lic
        [EndIf]
    [EndIf]
[EndIf]

# ###################  PhoenixFD environment variables ###################
PHX_FOR_MAYA<rrExeVersionMinReq>_MAIN_x64  =  <rrPlugins><rrExeVersionMinReq>\plug-ins\phoenixfd
MAYA_PLUG_IN_PATH  =  <rrPlugins><rrExeVersionMinReq>\plug-ins\phoenixfd\plug-ins;<MAYA_PLUG_IN_PATH>


# ###################  Yeti environment variables ###################
[If] <RR_YETI_NETWORK>  [==] 1
    [If] <RR_YETI_BASE>  [==] 
        RR_YETI_BASE  =  <rrPlugins><rrExeVersionMinReq>\yeti
    [EndIf]
    RR_YETI_BASE_LOCAL  =  <rrLocalPlugins><rrExeVersionMinReq>\yeti
[EndIf]

[If] <RR_YETI_NETWORK>  [==] 1
    echo * Yeti source path is set to <RR_YETI_BASE>
    echo * Yeti cache path is set to <RR_YETI_BASE_LOCAL>
    [copy] SyncCreateDir <RR_YETI_BASE>   =>   <RR_YETI_BASE_LOCAL>
    ARNOLD_PROCS_PATH  =  <RR_YETI_BASE_LOCAL>\bin;<ARNOLD_PROCS_PATH>
    ARNOLD_PLUGIN_PATH  =  <RR_YETI_BASE_LOCAL>\bin;<ARNOLD_PLUGIN_PATH>
    MTOA_EXTENSIONS_PATH  =  <RR_YETI_BASE_LOCAL>\plug-ins;<MTOA_EXTENSIONS_PATH>
    REDSHIFT_MAYAEXTENSIONSPATH  =  <RR_YETI_BASE_LOCAL>\plug-ins;<REDSHIFT_MAYAEXTENSIONSPATH>
    MAYA_PLUG_IN_PATH  =  <RR_YETI_BASE_LOCAL>\plug-ins;<MAYA_PLUG_IN_PATH>
    MAYA_SCRIPT_PATH  =  <RR_YETI_BASE_LOCAL>\scripts;<MAYA_SCRIPT_PATH>
    [If] <rrJobRenderer>  [contains] vray
        VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS  =  <RR_YETI_BASE_LOCAL>\bin;<VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS>
        VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS_x64  =  <RR_YETI_BASE_LOCAL>\bin;<VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS_x64>
    [EndIf]
    echo + pgYetiMaya any <RR_YETI_BASE_LOCAL> > <RR_YETI_BASE_LOCAL>/pgYetiMaya.mod
    PATH  =  <RR_YETI_BASE_LOCAL>\bin;<RR_YETI_BASE_LOCAL>\plug-ins;<PATH>
    LD_LIBRARY_PATH  =  <RR_YETI_BASE_LOCAL>\bin;<LD_LIBRARY_PATH>
[EndIf]
YETI_TMP  =  <TEMP>




# ###################  Golaem environment variables ###################
[If] <RR_GOLAEM_NETWORK>  [==] 1
    [If] <RR_GOLAEM_Base>  [==]
        RR_GOLAEM_BASE  =  <rrPlugins><rrExeVersionMinReq>\golaem
    [EndIf]
    RR_GOLAEM_BASE_LOCAL = <rrLocalPlugins><rrExeVersionMinReq>\golaem
[EndIf]

[If] <RR_GOLAEM_NETWORK>  [==] 1
    echo * Golaem source path is set to <RR_GOLAEM_BASE>
    echo * Golaem cache path is set to <RR_GOLAEM_BASE_LOCAL>
    [copy] SyncCreateDir <RR_GOLAEM_BASE>   =>   <RR_GOLAEM_BASE_LOCAL>
    echo + glmCrowd any <RR_GOLAEM_BASE_LOCAL> > <RR_GOLAEM_BASE_LOCAL>\glmCrowd.mod

    MAYA_MODULE_PATH  =  <RR_GOLAEM_BASE_LOCAL>;<MAYA_MODULE_PATH>
    PATH = <RR_GOLAEM_BASE_LOCAL>\bin;<PATH>

    ARNOLD_PROCEDURAL_PATH = <RR_GOLAEM_BASE_LOCAL>\procedurals;<ARNOLD_PROCEDURAL_PATH>
    ARNOLD_PLUGIN_PATH = <RR_GOLAEM_BASE_LOCAL>\shaders;<ARNOLD_PLUGIN_PATH>
    MTOA_EXTENSIONS_PATH = <RR_GOLAEM_BASE_LOCAL>\extensions;<MTOA_EXTENSIONS_PATH>
    DL_PROCEDURALS_PATH = <RR_GOLAEM_BASE_LOCAL>\procedurals;<DL_PROCEDURALS_PATH>
    MI_CUSTOM_SHADER_PATH = <RR_GOLAEM_BASE_LOCAL>\procedurals;<MI_CUSTOM_SHADER_PATH>
    RMS_PROCEDURAL_PATH = <RR_GOLAEM_BASE_LOCAL>\procedurals;<RMS_PROCEDURAL_PATH>
    RMS_SCRIPT_PATHS = <RR_GOLAEM_BASE_LOCAL>\procedurals;<RMS_SCRIPT_PATHS>
    RFM_SITE_PATH = <RR_GOLAEM_BASE_LOCAL>\procedurals;<RFM_SITE_PATH>
    RMS_SHADER_PATH = <RR_GOLAEM_BASE_LOCAL>\shaders;<RMS_SHADER_PATH>
    [If] <rrJobRenderer>  [contains] vray
        VRAY_PLUGINS_x64 = <RR_GOLAEM_BASE_LOCAL>\procedurals;<VRAY_PLUGINS_x64>
        VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS_x64 = <RR_GOLAEM_BASE_LOCAL>\procedurals;<VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS_x64>
        VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS = <RR_GOLAEM_BASE_LOCAL>\procedurals;<VRAY_FOR_MAYA<ExeVersionMinReqUS>_PLUGINS>
        VRAY_FOR_MAYA_SHADERS = <RR_GOLAEM_BASE_LOCAL>\shaders;<VRAY_FOR_MAYA_SHADERS>
    [EndIf]
    REDSHIFT_PROCEDURALSPATH = <RR_GOLAEM_BASE_LOCAL>\procedurals;<REDSHIFT_PROCEDURALSPATH>
    REDSHIFT_MAYAEXTENSIONSPATH = <RR_GOLAEM_BASE_LOCAL>\procedurals;<REDSHIFT_MAYAEXTENSIONSPATH>
[EndIf]
