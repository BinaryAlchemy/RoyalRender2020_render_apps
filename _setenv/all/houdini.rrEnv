echo * houdini.rrEnv version %rrVersion%

# !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!

# Please to create/edit the ...__inhouse.rrEnv file instead
# If this is not possible, PLEASE CONTACT support@RoyalRender.de
# We will send you an update rrEnv file that will work

# "but I know what I am doing"....  Still " NO! NO! NO!"
# It is not about you knowing that it will work, it is about RR updates/bug fixes might not work because of you.
# And if you need a bug fix for an urgent render, we cannot help you any more.
# And if you want to update RR to e.g. support a new render app version, your whole farm could break.

# !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!



HOUDINI_TEMP_DIR  =  <TMP>

HOUDINI_PATH  =  <HOUDINI_PATH>;&
HOUDINI_OTLSCAN_PATH  =  <HOUDINI_OTLSCAN_PATH>;&
HOUDINI_SCRIPT_PATH  =  <HOUDINI_SCRIPT_PATH>;&
HOUDINI_SOHO_PATH  =  <HOUDINI_SOHO_PATH>;&
# HOUDINI_VEX_PATH  =  <HOUDINI_VEX_PATH>;&
# HOUDINI_DSO_PATH  =  <HOUDINI_DSO_PATH>;&


LD_LIBRARY_PATH  =  <rrBaseAppPath>\dsolib;<LD_LIBRARY_PATH>

[If] <JOB>  [==] 
    JOB  =  <CustomHoudiniJob>
[EndIf]
echo * Houdini JOB variable is set to  <CustomHoudiniJob>


# ###################  Arnold/HtoA environment variables ###################
# we cannot use contains inside an other if because of the Windows delayedexpansion
[If] <rrJobRenderer>  [contains] arnold
    [If] <RR_HTOA_VERSION>  [==] 
        echo * Rendering with Arnold
        RR_HTOA_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <rrJobRenderer>  [contains] createASS
    [If] <RR_HTOA_VERSION>  [==] 
        echo * Creating with Arnold
        RR_HTOA_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <RR_HTOA_VERSION>  [==] 
    RR_HTOA_VERSION  =  AnyVersion
[EndIf]

[If] <RR_HTOA_BASE>  [==] 
    RR_HTOA_BASE  =  <rrSharedExeDir>htoa<RR_HTOA_VERSION>__houdini<ExeVersionFull>
[EndIf]
RR_HTOA_BASE_LOCAL  =  <rrLocalExeDir>htoa<RR_HTOA_VERSION>__houdini<ExeVersionFull>
echo * HtoA source path is set to <RR_HTOA_BASE>
echo * HtoA cache path is set to <RR_HTOA_BASE_LOCAL>
[copy] SyncNoCreateDir <RR_HTOA_BASE>   =>   <RR_HTOA_BASE_LOCAL>
PATH  =  <RR_HTOA_BASE_LOCAL>\bin;<RR_HTOA_BASE_LOCAL>\scripts\bin;<PATH>
ARNOLD_PLUGIN_PATH  =  <RR_HTOA_BASE_LOCAL>\shaders;<ARNOLD_PLUGIN_PATH>
ARNOLD_PROCEDURAL_PATH  =  <RR_HTOA_BASE_LOCAL>\procedurals;<ARNOLD_PROCEDURAL_PATH>
HOUDINI_PATH  =  <RR_HTOA_BASE_LOCAL>;<HOUDINI_PATH>
HOUDINI_OTLSCAN_PATH  =  <RR_HTOA_BASE_LOCAL>\otls;<HOUDINI_OTLSCAN_PATH>
HOUDINI_SOHO_PATH  =  <HOUDINI_SOHO_PATH>;<RR_HTOA_BASE_LOCAL>\soho;
HOUDINI_SCRIPT_PATH  =  <HOUDINI_SCRIPT_PATH>;<RR_HTOA_BASE_LOCAL>\scripts;
# HOUDINI_DSO_PATH  =  <HOUDINI_DSO_PATH>;<RR_HTOA_BASE_LOCAL>\dso



# ###################  RedShift environment variables ###################
[If] <rrJobRenderer>  [contains] redshift
    [If] <RR_REDSHIFT_VERSION>  [==] 
        echo * Rendering with Redshift
        RR_REDSHIFT_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <rrJobRenderer>  [contains] createRS
    [If] <RR_REDSHIFT_VERSION>  [==] 
        echo * Creating with Redshift
        RR_REDSHIFT_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <RR_REDSHIFT_VERSION>  [==] 
    RR_REDSHIFT_VERSION  =  AnyVersion
[EndIf]



[If] <RR_REDSHIFT_BASE>  [==] 
    RR_REDSHIFT_BASE  =  <rrSharedExeDir>Redshift_<RR_REDSHIFT_VERSION>
[EndIf]
RR_REDSHIFT_BASE_LOCAL  =  <rrLocalExeDir>Redshift_<RR_REDSHIFT_VERSION>
echo * RedShift source path is set to <RR_REDSHIFT_BASE>
echo * RedShift cache path is set to <RR_REDSHIFT_BASE_LOCAL>
[copy] SyncNoCreateDir <RR_REDSHIFT_BASE>   =>   <RR_REDSHIFT_BASE_LOCAL>
REDSHIFT_COREDATAPATH  =  <RR_REDSHIFT_BASE_LOCAL>
REDSHIFT_LOCALDATAPATH  =  <RR_REDSHIFT_BASE_LOCAL>
REDSHIFT_PREFSPATH  =  <RR_REDSHIFT_BASE_LOCAL>\preferences.xml
REDSHIFT_LICENSEPATH  =  <RR_REDSHIFT_BASE_LOCAL>
[If] <REDSHIFT_HOUDINI_ROOT>  [==] 
    echo * Important: In case this folder does not exist, please dublicate the next older version folder into this one:
    [If] <rrExeOS>  [==] win
        REDSHIFT_HOUDINI_ROOT  =  <RR_REDSHIFT_BASE_LOCAL>\Plugins\Houdini\<ExeVersionFull>
        echo * Redshift Houdini plugin folder is set to: <RR_REDSHIFT_BASE>\Plugins\Houdini\<ExeVersionFull>
    [Else]
        REDSHIFT_HOUDINI_ROOT  =  <RR_REDSHIFT_BASE_LOCAL>\redshift4houdini\<ExeVersionFull>
        echo * Redshift Houdini plugin folder is set to: <RR_REDSHIFT_BASE>/redshift4houdini/<ExeVersionFull>
    [EndIf]
[EndIf]
REDSHIFT_PLUG_IN_PATH  =  <REDSHIFT_HOUDINI_ROOT>\dso;
HOUDINI_DSO_ERROR  =  2
PATH  =  <RR_REDSHIFT_BASE_LOCAL>\bin;<RR_REDSHIFT_BASE_LOCAL>\extensions;<PATH>
HOUDINI_PATH  =  <REDSHIFT_HOUDINI_ROOT>;<HOUDINI_PATH>
HOUDINI_OTLSCAN_PATH  =  <REDSHIFT_HOUDINI_ROOT>\otls;<HOUDINI_OTLSCAN_PATH>
HOUDINI_SOHO_PATH  =  <HOUDINI_SOHO_PATH>;<REDSHIFT_HOUDINI_ROOT>\soho;
# HOUDINI_DSO_PATH  =  <HOUDINI_DSO_PATH>;<REDSHIFT_HOUDINI_ROOT>\dso
[If] <rrExeOS>  [==] win
    [copy] SyncCreate C:\ProgramData\Redshift\redshift-core.lic   =>   <RR_REDSHIFT_BASE_LOCAL>\redshift-core.lic
    [copy] SyncCreate C:\ProgramData\Redshift\redshift-core2.lic   =>   <RR_REDSHIFT_BASE_LOCAL>\redshift-core2.lic
[Else]
    [If] <rrExeOS>  [==] lx
        [copy] SyncCreate /home/${USERNAME}/redshift/redshift-core.lic   =>   <RR_REDSHIFT_BASE_LOCAL>/redshift-core.lic
        [copy] SyncCreate /home/${USERNAME}/redshift/redshift-core2.lic   =>   <RR_REDSHIFT_BASE_LOCAL>/redshift-core2.lic
    [EndIf]
[EndIf]


# ###################  VRay environment variables ###################

RR_VRAY_IS_USED  =  

[If] <rrJobRenderer>  [contains] vray
    [If] <RR_VRAY_VERSION>  [==] 
        echo * Rendering with VRay
        RR_VRAY_VERSION  =  <rrJobRendererVersion>
        RR_VRAY_IS_USED  =  TRUE
    [EndIf]
[EndIf]
[If] <rrJobRenderer>  [contains] createVR
    [If] <RR_VRAY_VERSION>  [==] 
        echo * Creating with VRay
        RR_VRAY_VERSION  =  <rrJobRendererVersion>
        RR_VRAY_IS_USED  =  TRUE
    [EndIf]
[EndIf]
[If] <RR_VRAY_VERSION>  [==] 
    RR_VRAY_VERSION  =  AnyVersion
[EndIf]


[If] <RR_VRAY_BASE>  [==] 
    RR_VRAY_BASE  =  <rrSharedExeDir>vray_<RR_VRAY_VERSION>__houdini<ExeVersionFull>
[EndIf]
RR_VRAY_BASE_LOCAL  =  <rrLocalExeDir>vray_<RR_VRAY_VERSION>__houdini<ExeVersionFull>
echo * VRay source path is set to <RR_VRAY_BASE>
echo * VRay cache path is set to <RR_VRAY_BASE_LOCAL>
[copy] SyncNoCreateDir <RR_VRAY_BASE>   =>   <RR_VRAY_BASE_LOCAL>

VRAY_APPSDK  =  <RR_VRAY_BASE_LOCAL>\appsdk
VFH_HOME  =  <RR_VRAY_BASE_LOCAL>\vfh_home
VRAY_OSL_PATH  =  <VRAY_APPSDK>\bin
VRAY_UI_DS_PATH  =  <RR_VRAY_BASE_LOCAL>\ui

VRAY_FOR_HOUDINI_AURA_LOADERS  =  <VFH_HOME>\libs
VFH_PATH  =  <VRAY_APPSDK>\bin;<VFH_HOME>\bin;<VRAY_FOR_HOUDINI_AURA_LOADERS>

HOUDINI_PATH  =  <VFH_HOME>;<HOUDINI_PATH>
LD_LIBRARY_PATH  =  <RR_VRAY_BASE_LOCAL>\bin;<RR_VRAY_BASE_LOCAL>\lib;<LD_LIBRARY_PATH>
PATH  =  <VFH_PATH>;<PATH>
PATH  =  <VRAY_APPSDK>\bin\compat;<PATH>

QT_QPA_PLATFORM_PLUGIN_PATH  =  <rrBaseAppPath>\bin\Qt_plugins\platforms

    
[If] RR_VRAY_IS_USED  [==] TRUE        
    HOUDINI13_VOLUME_COMPATIBILITY  =  1
    HDF5_DISABLE_VERSION_CHECK  =  1
[EndIf]





# conversion of back-slashes into slashes for Windows as Houdini does not like backslashes
[BSlashConvert] HOUDINI_PATH  =  <HOUDINI_PATH>
[BSlashConvert] HOUDINI_OTLSCAN_PATH  =  <HOUDINI_OTLSCAN_PATH>
[BSlashConvert] HOUDINI_SOHO_PATH  =  <HOUDINI_SOHO_PATH>
[BSlashConvert] HOUDINI_SCRIPT_PATH  =  <HOUDINI_SCRIPT_PATH>
# [BSlashConvert] HOUDINI_VEX_PATH  =  <HOUDINI_VEX_PATH>
# [BSlashConvert] HOUDINI_DSO_PATH  =  <HOUDINI_DSO_PATH>



echo * HOUDINI_PATH is set to "<HOUDINI_PATH>"
echo * HOUDINI_OTLSCAN_PATH is set to "<HOUDINI_OTLSCAN_PATH>"
echo * HOUDINI_SOHO_PATH is set to "<HOUDINI_SOHO_PATH>"
echo * HOUDINI_SCRIPT_PATH is set to "<HOUDINI_SCRIPT_PATH>"
# echo * HOUDINI_VEX_PATH is set to "<HOUDINI_VEX_PATH>"
# echo * HOUDINI_DSO_PATH is set to "<HOUDINI_DSO_PATH>"



