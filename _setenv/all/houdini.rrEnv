echo * ------ houdini.rrEnv version %rrVersion% ------

# !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!

# Please create/edit the ...__inhouse.rrEnv file instead

# If this is not possible, PLEASE CONTACT support@RoyalRender.de
# We will send you an update rrEnv file that will work

# "but I know what I am doing"....  Still " NO! NO! NO!"
# It is not about you knowing that it will work, it is about RR updates/bug fixes might not work because of you.
# And if you need a bug fix for an urgent render, we cannot help you any more.
# And if you want to update RR to e.g. support a new render app version, your whole farm could break.

# !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!! !!!!!!!!!DO NOT EDIT THIS FILE!!!!!!!!


DollarSign = $

#Disable UI messages
HOUDINI_INTERACTIVE_ASSERTS = 0

HOUDINI_TEMP_DIR  =  <TEMP>

HOUDINI_PATH  =  <HOUDINI_PATH>;&
HOUDINI_OTLSCAN_PATH  =  <HOUDINI_OTLSCAN_PATH>;&
HOUDINI_SCRIPT_PATH  =  <HOUDINI_SCRIPT_PATH>;&
HOUDINI_SOHO_PATH  =  <HOUDINI_SOHO_PATH>;&
# HOUDINI_VEX_PATH  =  <HOUDINI_VEX_PATH>;&
HOUDINI_DSO_PATH  =  <HOUDINI_DSO_PATH>;&  
PXR_PLUGINPATH_NAME = <PXR_PLUGINPATH_NAME>;&

[Exists] <RR_ROOT>\render_apps\_submitplugins\Houdini
    HOUDINI_PATH  =  <RR_ROOT>\render_apps\_submitplugins\Houdini;<HOUDINI_PATH>
[EndIf]


PATH= <rrBaseAppPath>\bin;<PATH>

LD_LIBRARY_PATH  =  <rrBaseAppPath>\dsolib;<LD_LIBRARY_PATH>

[If] <JOB>  [==]
    [If] <CustomHoudiniJob>  [!=]  
        JOB  =  <CustomHoudiniJob>
    [EndIf]
[EndIf]
[If] <JOB>  [!=]
    [BSlashConvert] JOB  =  <JOB>
[EndIf]    
[If] <JOB>  [!=]
    echo * JOB Env variable is set to  "<JOB>"
[EndIf]    


[If] <CustomHPyHPyVerP>  [==]
    [If] <rrExeVersionMajor>  [<] 19
        HPyVerP=2.7
        HPyVer=27
    [Else]
        [If] <rrExeVersionMajor>  [<] 20
            [If] <rrExeVersionMinor>  [<] 5000
                HPyVerP=3.7
                HPyVer=37
            [Else]
                HPyVerP=3.9
                HPyVer=39
            [EndIf]
        [Else]
            HPyVerP=3.10
            HPyVer=310
        [EndIf]
    [EndIf]    
[Else]
    HPyVerP=<CustomHPyVerP>
    HPyVer=<CustomHPyVer>  
[EndIf]    

#we use this rrEnv file for houdini and usd_stdA, therefore this switch
[If] <rrJobRenderapp> [==]  Houdini
    [If] <rrBaseAppPath> [!=]  
        [If] <RR_NO_HFS>  [==]
            HFS = <rrBaseAppPath>
            HH = <rrBaseAppPath>/houdini
            HHP= <rrBaseAppPath>/houdini/python<HPyVerP>libs"
        [EndIf]    
    [EndIf]    
[EndIf]    





# ###################  Arnold/HtoA environment variables ###################
# we cannot use contains inside an other if because of the Windows delayed expansion
RR_HTOA_VERSION=<RR_HTOA_VERSION>
[If] <rrJobRenderer>  [contains] arnold
    [If] <RR_HTOA_VERSION>  [==] 
        echo * Rendering with Arnold
        RR_HTOA_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <rrJobRenderer>  [contains] createASS
    [If] <RR_HTOA_VERSION>  [==] 
        echo * Creating with Arnold
        RR_HTOA_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <RR_HTOA_VERSION>  [==] 
    RR_HTOA_VERSION  =  AnyVersion
[EndIf]

[If] <RR_HTOA_BASE>  [==] 
    RR_HTOA_BASE  =  <rrSharedExeDir>htoa<RR_HTOA_VERSION>__houdini<ExeVersionFull>
[EndIf]
RR_HTOA_BASE_LOCAL  =  <rrLocalExeDir>htoa<RR_HTOA_VERSION>__houdini<ExeVersionFull>
echo * HtoA source path is set to <RR_HTOA_BASE>
echo * HtoA cache path is set to <RR_HTOA_BASE_LOCAL>
[copy] SyncNoCreateDir <RR_HTOA_BASE>   =>   <RR_HTOA_BASE_LOCAL>
PATH  =  <RR_HTOA_BASE_LOCAL>\bin;<RR_HTOA_BASE_LOCAL>\scripts\bin;<PATH>
ARNOLD_PLUGIN_PATH  =  <RR_HTOA_BASE_LOCAL>\shaders;<ARNOLD_PLUGIN_PATH>
ARNOLD_PROCEDURAL_PATH  =  <RR_HTOA_BASE_LOCAL>\procedurals;<ARNOLD_PROCEDURAL_PATH>
HOUDINI_PATH  =  <RR_HTOA_BASE_LOCAL>;<HOUDINI_PATH>
HOUDINI_OTLSCAN_PATH  =  <RR_HTOA_BASE_LOCAL>\otls;<HOUDINI_OTLSCAN_PATH>
HOUDINI_SOHO_PATH  =  <HOUDINI_SOHO_PATH>;<RR_HTOA_BASE_LOCAL>\soho;
HOUDINI_SCRIPT_PATH  =  <HOUDINI_SCRIPT_PATH>;<RR_HTOA_BASE_LOCAL>\scripts;
# HOUDINI_DSO_PATH  =  <HOUDINI_DSO_PATH>;<RR_HTOA_BASE_LOCAL>\dso
ARNOLD_ADP_OPTIN = 0
PXR_PLUGINPATH_NAME = <RR_HTOA_BASE_LOCAL>\arnold\plugins;<PXR_PLUGINPATH_NAME>


# ###################  RedShift environment variables ###################
REDSHIFT_USED = FALSE
RR_REDSHIFT_VERSION= <RR_REDSHIFT_VERSION>

[If] <rrJobRenderer>  [contains] redshift
    echo * Rendering with Redshift
    REDSHIFT_USED = TRUE
    echo REDSHIFT_USED is <REDSHIFT_USED>
    [If] <RR_REDSHIFT_VERSION>  [==] 
        RR_REDSHIFT_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <rrJobRenderer>  [contains] createRS
    echo * Creating with Redshift
    REDSHIFT_USED = TRUE
    echo REDSHIFT_USED is <REDSHIFT_USED>
    [If] <RR_REDSHIFT_VERSION>  [==] 
        RR_REDSHIFT_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <RR_REDSHIFT_VERSION>  [==] 
    RR_REDSHIFT_VERSION  =  AnyVersion
[EndIf]

RR_REDSHIFT_FLT = <RR_REDSHIFT_FLT>
RR_REDSHIFT_BASE = <RR_REDSHIFT_BASE>
RR_REDSHIFT_BASE_LOCAL = <RR_REDSHIFT_BASE_LOCAL>
[If] <RR_REDSHIFT_FLT>  [==] 1
    [If] <RR_REDSHIFT_BASE>  [==] 
        RR_REDSHIFT_BASE  =  <rrSharedExeDir>Redshift_<RR_REDSHIFT_VERSION>_flt
    [EndIf]
    RR_REDSHIFT_BASE_LOCAL  =  <rrLocalExeDir>Redshift_<RR_REDSHIFT_VERSION>_flt
[Else]
    [If] <RR_REDSHIFT_BASE>  [==] 
        RR_REDSHIFT_BASE  =  <rrSharedExeDir>Redshift_<RR_REDSHIFT_VERSION>
    [EndIf]
    RR_REDSHIFT_BASE_LOCAL  =  <rrLocalExeDir>Redshift_<RR_REDSHIFT_VERSION>
[EndIf]
echo * RedShift source path is set to <RR_REDSHIFT_BASE>
echo * RedShift cache path is set to <RR_REDSHIFT_BASE_LOCAL>
[copy] SyncNoCreateDir <RR_REDSHIFT_BASE>   =>   <RR_REDSHIFT_BASE_LOCAL>
REDSHIFT_COREDATAPATH  =  <RR_REDSHIFT_BASE_LOCAL>
REDSHIFT_PREFSPATH  =  <RR_REDSHIFT_BASE_LOCAL>\preferences.xml
REDSHIFT_LICENSEPATH  =  <RR_REDSHIFT_BASE_LOCAL>
[If] <REDSHIFT_HOUDINI_ROOT>  [==] 
    [If] <rrExeOS>  [==] win
        REDSHIFT_HOUDINI_ROOT  =  <RR_REDSHIFT_BASE_LOCAL>\Plugins\Houdini\<ExeVersionFull>
        echo * Redshift Houdini plugin folder is set to: <RR_REDSHIFT_BASE>\Plugins\Houdini\<ExeVersionFull>
        [If] <REDSHIFT_USED> [==] TRUE
            [Exists] <RR_REDSHIFT_BASE>\Plugins\Houdini\<ExeVersionFull>
                echo .
            [Else]
                echo * ERROR: Required Redshift folder does not exist: <RR_REDSHIFT_BASE>\Plugins\Houdini\<ExeVersionFull>
                echo * Please dublicate the next older version folder into this one.
            [EndIf]
        [EndIf]
    [Else]
        REDSHIFT_HOUDINI_ROOT  =  <RR_REDSHIFT_BASE_LOCAL>\redshift4houdini\<ExeVersionFull>
        [If] <REDSHIFT_USED> [==] TRUE
            [Exists] <RR_REDSHIFT_BASE>/redshift4houdini/<ExeVersionFull>
                echo .
            [Else]
                echo * ERROR: Required Redshift folder does not exist: <RR_REDSHIFT_BASE>/redshift4houdini/<ExeVersionFull>
                echo * Please dublicate the next older version folder into this one.
            [EndIf]
        [EndIf]
    [EndIf]
[EndIf]

[If] <REDSHIFT_USED> [==] TRUE
    REDSHIFT_PLUG_IN_PATH  =  <REDSHIFT_HOUDINI_ROOT>\dso;
    HOUDINI_DSO_ERROR  =  2
    PATH  =  <RR_REDSHIFT_BASE_LOCAL>\bin;<RR_REDSHIFT_BASE_LOCAL>\extensions;<PATH>
    HOUDINI_PATH  =  <REDSHIFT_HOUDINI_ROOT>;<HOUDINI_PATH>
    HOUDINI_OTLSCAN_PATH  =  <REDSHIFT_HOUDINI_ROOT>\otls;<HOUDINI_OTLSCAN_PATH>
    HOUDINI_SOHO_PATH  =  <HOUDINI_SOHO_PATH>;<REDSHIFT_HOUDINI_ROOT>\soho;
    # HOUDINI_DSO_PATH  =  <HOUDINI_DSO_PATH>;<REDSHIFT_HOUDINI_ROOT>\dso
[EndIf]

[If] <REDSHIFT_USED> [==] TRUE
    [If] <rrExeOS>  [==] win
        PXR_PLUGINPATH_NAME = <RR_REDSHIFT_BASE_LOCAL>\Plugins\Solaris\<ExeVersionFull>;<PXR_PLUGINPATH_NAME>
        [copy] SyncCreate C:\ProgramData\Redshift\redshift-core.lic   =>   <RR_REDSHIFT_BASE_LOCAL>\redshift-core.lic
        [copy] SyncCreate C:\ProgramData\Redshift\redshift-core2.lic   =>   <RR_REDSHIFT_BASE_LOCAL>\redshift-core2.lic
    [Else]
        PXR_PLUGINPATH_NAME = <RR_REDSHIFT_BASE_LOCAL>\redshift4solaris\<ExeVersionFull>;<PXR_PLUGINPATH_NAME>
        [If] <rrExeOS>  [==] lx
            [copy] SyncCreate /home/${USERNAME}/redshift/redshift-core.lic   =>   <RR_REDSHIFT_BASE_LOCAL>/redshift-core.lic
            [copy] SyncCreate /home/${USERNAME}/redshift/redshift-core2.lic   =>   <RR_REDSHIFT_BASE_LOCAL>/redshift-core2.lic
        [EndIf]
    [EndIf]
REDSHIFT_LICENSEPATH=<RR_REDSHIFT_BASE_LOCAL>
[EndIf]

REDSHIFT_LOCALDATAPATH = <rrLocalTemp>Redshift
[If] <REDSHIFT_CACHEPATH>  [==] 
    REDSHIFT_CACHEPATH = <rrLocalExeDir_NoApp>Redshift\TextureCache
    #delete old cache folders used in times before RR had set them:
    [If] <rrExeOS>  [==] win
        [Exists] <LocalAppData>\Redshift\Cache
            [DelFolder] <LocalAppData>\Redshift\Cache
        [EndIf]
    [EndIf]
    [Exists] <REDSHIFT_LOCALDATAPATH>/cache
        [DelFolder] <REDSHIFT_LOCALDATAPATH>/cache
    [EndIf]
[EndIf]

[If] <REDSHIFT_TEXTURECACHEBUDGET>  [==] 
    REDSHIFT_TEXTURECACHEBUDGET = 20
[EndIf]  

# ###################  VRay environment variables ###################

RR_VRAY_IS_USED  =  FALSE
RR_VRAY_VERSION= <RR_VRAY_VERSION>

[If] <rrJobRenderer>  [contains] vray
    [If] <RR_VRAY_VERSION>  [==] 
        echo * Rendering with VRay
        RR_VRAY_VERSION  =  <rrJobRendererVersion>
    [EndIf]
    RR_VRAY_IS_USED  =  TRUE
[EndIf]
[If] <rrJobRenderer>  [contains] VRay
    [If] <RR_VRAY_VERSION>  [==] 
        echo * Rendering with VRay
        RR_VRAY_VERSION  =  <rrJobRendererVersion>
    [EndIf]
    RR_VRAY_IS_USED  =  TRUE
[EndIf]
[If] <rrJobRenderer>  [contains] createVr
    [If] <RR_VRAY_VERSION>  [==] 
        echo * Creating with VRay
        RR_VRAY_VERSION  =  <rrJobRendererVersion>
    [EndIf]
    RR_VRAY_IS_USED  =  TRUE
[EndIf]
[If] <RR_VRAY_VERSION>  [==] 
    RR_VRAY_VERSION  =  AnyVersion
[EndIf]


[If] <RR_VRAY_BASE>  [==] 
    RR_VRAY_BASE  =  <rrSharedExeDir>vray_<RR_VRAY_VERSION>__houdini<ExeVersionFull>
[EndIf]
RR_VRAY_BASE_LOCAL  =  <rrLocalExeDir>vray_<RR_VRAY_VERSION>__houdini<ExeVersionFull>

[If] <RR_VRAY_IS_USED>  [==] TRUE 
    echo * VRay source path is set to <RR_VRAY_BASE>
    echo * VRay cache path is set to <RR_VRAY_BASE_LOCAL>
    [copy] SyncNoCreateDir <RR_VRAY_BASE>   =>   <RR_VRAY_BASE_LOCAL>

    VFH_HOME  =  <RR_VRAY_BASE_LOCAL>\vfh_home
    VRAY_APPSDK  =  <RR_VRAY_BASE_LOCAL>\appsdk
[EndIf]
[If] <RR_VRAY_IS_USED>  [==] TRUE     
    VRAY_SDK  =  <RR_VRAY_BASE_LOCAL>\appsdk
    VRAY_FOR_HOUDINI_APPSDK_BIN = <VRAY_APPSDK>\bin
    VRAY_OSL_PATH  =  <VRAY_APPSDK>\bin
    VRAY_UI_DS_PATH  =  <RR_VRAY_BASE_LOCAL>\ui

    VRAY_FOR_HOUDINI_AURA_LOADERS  =  <VFH_HOME>\libs
    VFH_PATH  =  <VRAY_APPSDK>\bin;<VFH_HOME>\bin;<VRAY_FOR_HOUDINI_AURA_LOADERS>
[EndIf]

[If] <RR_VRAY_IS_USED>  [==] TRUE 
    HOUDINI_PATH  =  <VFH_HOME>;<HOUDINI_PATH>
    LD_LIBRARY_PATH  =  <VRAY_APPSDK>\bin;<RR_VRAY_BASE_LOCAL>\bin;<RR_VRAY_BASE_LOCAL>\lib;<LD_LIBRARY_PATH>
    PATH  =  <VRAY_APPSDK>\bin;<VFH_HOME>\bin;<VRAY_APPSDK>\bin\compat;<VFH_PATH>;<PATH>
    PYTHONPATH = <VRAY_APPSDK>\python<HPyVer>;<PYTHONPATH>
    VFH_DSO_PATH = <VFH_HOME>\dso_py<HPyVer>

    [If] <rrExeVersionMajor>  [<] 19
        #2 instead of 27
        VFH_DSO_PATH = <VFH_HOME>\dso_py2
    [Else]
        [If] <rrExeVersionMajor>  [<] 20
            [If] <rrExeVersionMinor>  [<] 5000
                #3 instead of 37
                VFH_DSO_PATH = <VFH_HOME>\dso_py3
            [EndIf]
        [EndIf]
    [EndIf]
    VFU_PLUGINS=<VFH_DSO_PATH>/usd_plugins/hdVRay/plugins
[EndIf]
#Has to be seperated as it uses <VFH_DSO_PATH>
[If] <RR_VRAY_IS_USED>  [==] TRUE        
    HOUDINI_DSO_PATH=<VFH_DSO_PATH>;<HOUDINI_DSO_PATH>
    HOUDINI13_VOLUME_COMPATIBILITY  =  1
    HDF5_DISABLE_VERSION_CHECK  =  1
[EndIf]


QT_QPA_PLATFORM_PLUGIN_PATH  =  <rrBaseAppPath>\bin\Qt_plugins\platforms


# ###################  Renderman environment variables ###################
[If] <RR_RENDERMAN_USED>  [==] 
    RR_RENDERMAN_USED = FALSE
[EndIf]

RR_RENDERMAN_VERSION=<RR_RENDERMAN_VERSION>
[If] <rrJobRenderer>  [==] renderman
    echo * Rendering with Pixars Renderman
    RR_RENDERMAN_USED = TRUE
    [If] <RR_RENDERMAN_VERSION>  [==] 
        RR_RENDERMAN_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <rrJobRenderer>  [contains] prman
    echo * Rendering with Pixars Renderman
    RR_RENDERMAN_USED = TRUE
    [If] <RR_RENDERMAN_VERSION>  [==] 
        RR_RENDERMAN_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <rrJobRenderer>  [contains] createRIB
    echo * Creating .rib with renderman
    RR_RENDERMAN_USED = TRUE
    [If] <RR_RENDERMAN_VERSION>  [==] 
        RR_RENDERMAN_VERSION  =  <rrJobRendererVersion>
    [EndIf]
[EndIf]
[If] <RR_RENDERMAN_VERSION>  [==] 
    RR_RENDERMAN_VERSION  =  AnyVersion
[EndIf]



[If] <RR_RENDERMAN_BASE>  [==] 
    RR_RENDERMAN_BASE  =  <rrSharedExeDir>Renderman
[EndIf]
RR_RENDERMAN_BASE_LOCAL  =  <rrLocalExeDir>Renderman

[If] <RR_RENDERMAN_USED>  [==] TRUE
    RR_RENDERMAN_PROSERVER  =  <RR_RENDERMAN_BASE>\RenderManProServer-<RR_RENDERMAN_VERSION>
    RR_RENDERMAN_PROSERVER_LOCAL  =  <RR_RENDERMAN_BASE_LOCAL>\RenderManProServer-<RR_RENDERMAN_VERSION>
    RR_RENDERMAN_HOUDINI  =  <RR_RENDERMAN_BASE>\RenderManForHoudini-<RR_RENDERMAN_VERSION>
    RR_RENDERMAN_HOUDINI_LOCAL  =  <RR_RENDERMAN_BASE_LOCAL>\RenderManForHoudini-<RR_RENDERMAN_VERSION>
[EndIf]
[If] <RR_RENDERMAN_USED>  [==] TRUE
    echo * Renderman ProServer source path is set to <RR_RENDERMAN_PROSERVER>
    echo * Renderman ProServer cache path is set to <RR_RENDERMAN_PROSERVER_LOCAL>
    [copy] SyncNoCreateDir <RR_RENDERMAN_PROSERVER>   =>   <RR_RENDERMAN_PROSERVER_LOCAL>
    echo * Renderman Houdini source path is set to <RR_RENDERMAN_HOUDINI>
    echo * Renderman Houdini cache path is set to <RR_RENDERMAN_HOUDINI_LOCAL>
    [copy] SyncNoCreateDir <RR_RENDERMAN_HOUDINI>   =>   <RR_RENDERMAN_HOUDINI_LOCAL>
    RMANTREE = <RR_RENDERMAN_PROSERVER_LOCAL>
    RMSTREE = <RR_RENDERMAN_PROSERVER_LOCAL>
    RFHTREE = <RR_RENDERMAN_HOUDINI_LOCAL>
[EndIf]
[If] <RR_RENDERMAN_USED>  [==] TRUE
    RMAN_PROCEDURALPATH = <RFHTREE>/<HPyVerP>/<ExeVersionFull>/openvdb;<RMAN_PROCEDURALPATH>
    HOUDINI_PATH=<RFHTREE>/<HPyVerP>/<ExeVersionFull>;<HOUDINI_PATH>
    PATH=<RMANTREE>\bin;<PATH>
[EndIf]



# conversion of back-slashes into slashes for Windows as Houdini does not like backslashes
[BSlashConvert] HOUDINI_PATH  =  <HOUDINI_PATH>
[BSlashConvert] HOUDINI_OTLSCAN_PATH  =  <HOUDINI_OTLSCAN_PATH>
[BSlashConvert] HOUDINI_SOHO_PATH  =  <HOUDINI_SOHO_PATH>
[BSlashConvert] HOUDINI_SCRIPT_PATH  =  <HOUDINI_SCRIPT_PATH>
# [BSlashConvert] HOUDINI_VEX_PATH  =  <HOUDINI_VEX_PATH>
[BSlashConvert] HOUDINI_DSO_PATH  =  <HOUDINI_DSO_PATH>
[BSlashConvert] PXR_PLUGINPATH_NAME  =  <PXR_PLUGINPATH_NAME>


echo * HOUDINI_PATH is set to "<HOUDINI_PATH>"
echo * HOUDINI_OTLSCAN_PATH is set to "<HOUDINI_OTLSCAN_PATH>"
echo * HOUDINI_SOHO_PATH is set to "<HOUDINI_SOHO_PATH>"
echo * HOUDINI_SCRIPT_PATH is set to "<HOUDINI_SCRIPT_PATH>"
# echo * HOUDINI_VEX_PATH is set to "<HOUDINI_VEX_PATH>"
echo * HOUDINI_DSO_PATH is set to "<HOUDINI_DSO_PATH>"
echo * PXR_PLUGINPATH_NAME is set to "<PXR_PLUGINPATH_NAME>"


